<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Nueva Solicitud Externa</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <style>
    :root {
      --primary-color: #2c3e50;
      --secondary-color: #3498db;
      --accent-color: #e74c3c;
      --light-bg: #f8f9fa;
      --dark-text: #343a40;
    }
    
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--light-bg);
      color: var(--dark-text);
    }
    
    .main-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .card {
      border-radius: 10px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      border: none;
      margin-bottom: 20px;
    }
    
    .card-header {
      background-color: var(--primary-color);
      color: white;
      border-bottom: 3px solid var(--secondary-color);
      padding: 1.25rem 1.5rem;
    }
    
    .form-section {
      padding: 1.5rem;
      background-color: white;
      border-radius: 8px;
      margin-bottom: 1.5rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }
    
    .section-title {
      position: relative;
      padding-bottom: 0.75rem;
      margin-bottom: 1.5rem;
      color: var(--primary-color);
    }
    
    .section-title:after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 60px;
      height: 3px;
      background-color: var(--secondary-color);
    }
    
    .form-label {
      font-weight: 600;
      color: var(--primary-color);
      margin-bottom: 0.5rem;
    }
    
    .required-field::after {
      content: " *";
      color: var(--accent-color);
    }
    
    .form-control, .form-select {
      border-radius: 6px;
      padding: 0.75rem 1rem;
      border: 1px solid #ced4da;
    }
    
    .form-control:focus, .form-select:focus {
      border-color: var(--secondary-color);
      box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
    }
    
    textarea.form-control {
      min-height: 120px;
      resize: vertical;
    }
    
    .btn {
      padding: 0.75rem 1.5rem;
      border-radius: 6px;
      font-weight: 500;
      transition: all 0.3s ease;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }
    
    .btn-primary {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    .btn-primary:hover {
      background-color: #1a252f;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .btn-outline-primary {
      color: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    .btn-outline-primary:hover {
      background-color: var(--primary-color);
      color: white;
    }
    
    .btn-secondary {
      background-color: #6c757d;
      border-color: #6c757d;
    }
    
    .btn-search {
      position: absolute;
      right: 0;
      top: 0;
      height: 100%;
      border-radius: 0 6px 6px 0;
      background-color: var(--secondary-color);
      color: white;
      border: none;
      width: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .btn-search:hover {
      background-color: #2980b9;
    }
    
    .select-container {
      position: relative;
    }
    
    .toast-container {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 1100;
    }
    
    #map { 
      height: 300px; 
      width: 100%; 
      margin-top: 10px; 
      border-radius: 6px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    @media (max-width: 768px) {
      .main-container {
        padding: 15px;
      }
      
      .card-header {
        padding: 1rem;
      }
      
      .form-section {
        padding: 1rem;
      }
      
      .section-title {
        font-size: 1.25rem;
      }
      
      .btn {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
      }
      
      #map {
        height: 250px;
      }
    }
  </style>
</head>
<body>
  <div class="main-container">
    <div id="toastContainer" class="toast-container"></div>
    
    <div class="card">
      <div class="card-header">
        <h1 class="h4 mb-0"><i class="fas fa-file-alt me-2"></i>NUEVA SOLICITUD EXTERNA</h1>
      </div>
      
      <div class="card-body">
        <div class="form-section">
          <h3 class="section-title"><i class="fas fa-edit me-2"></i>Información de la Solicitud</h3>
          
          <form id="form-solicitud">
            <div class="row">
              <div class="col-md-12 mb-3">
                <label for="descripcion_solicitud" class="form-label required-field">Descripción de la solicitud</label>
                <textarea class="form-control" id="descripcion_solicitud" rows="3" required placeholder="Describa detalladamente la solicitud..."></textarea>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="tipologia_trabajo" class="form-label required-field">Tipología de Trabajo</label>
                <div class="select-container">
                  <select id="tipologia_trabajo" class="form-select" required></select>
                  <button type="button" class="btn-search" onclick="abrirModalBusqueda('tipologia')">
                    <i class="fas fa-search"></i>
                  </button>
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <label for="barrio_solicitud" class="form-label required-field">Barrio</label>
                <div class="select-container">
                  <select id="barrio_solicitud" class="form-select" required></select>
                  <button type="button" class="btn-search" onclick="abrirModalBusqueda('barrio')">
                    <i class="fas fa-search"></i>
                  </button>
                </div>
              </div>
            </div>

            <div class="mb-3">
              <label for="direccion_exacta" class="form-label required-field">Dirección Exacta</label>
              <textarea class="form-control" id="direccion_exacta" rows="2" required placeholder="Indique la dirección lo más detallada posible..."></textarea>
            </div>

            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="supervisor_asignado" class="form-label required-field">Supervisor Asignado</label>
                <div class="select-container">
                  <select id="supervisor_asignado" class="form-select" required></select>
                  <button type="button" class="btn-search" onclick="abrirModalBusqueda('supervisor')">
                    <i class="fas fa-search"></i>
                  </button>
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <label for="profesional_responsable" class="form-label required-field">Profesional Responsable</label>
                <div class="select-container">
                  <select id="profesional_responsable" class="form-select" required></select>
                  <button type="button" class="btn-search" onclick="abrirModalBusqueda('profesional')">
                    <i class="fas fa-search"></i>
                  </button>
                </div>
              </div>
            </div>

            <div class="mb-3">
              <label for="cliente_externo" class="form-label required-field">Cliente Externo</label>
              <div class="select-container">
                <select id="cliente_externo" class="form-select" required></select>
                <button type="button" class="btn-search" onclick="abrirModalBusqueda('cliente')">
                  <i class="fas fa-search"></i>
                </button>
              </div>
            </div>

            <div class="mb-3">
              <label class="form-label required-field">Ubicación en el Mapa <small>(Haga clic para seleccionar)</small></label>
              <div id="map"></div>
              <div id="ubicacion-mensaje" class="small text-muted mt-1">
                <i class="fas fa-info-circle"></i> Ninguna ubicación seleccionada
              </div>
            </div>

            <div class="d-flex justify-content-between mt-4">
              <button type="button" onclick="window.location.href='inicio.html'" class="btn btn-secondary">
                <i class="fas fa-arrow-left me-2"></i> Volver al Inicio
              </button>
              <div>
                <button type="button" id="btn-ver-tabla" onclick="verSolicitudes()" class="btn btn-outline-primary me-2">
                  <i class="fas fa-table me-2"></i> Ver Solicitudes
                </button>
                <button type="submit" id="btn-guardar" class="btn btn-primary">
                  <i class="fas fa-save me-2"></i> Guardar Solicitud
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal de búsqueda -->
  <div class="modal fade" id="modalBusqueda" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header bg-primary text-white">
          <h5 class="modal-title" id="tituloModal">Buscar</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <input type="text" id="inputBusqueda" class="form-control" placeholder="Escriba para buscar...">
          </div>
          <ul id="listaResultados" class="list-group" style="max-height: 400px; overflow-y: auto;"></ul>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script type="module">
    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
    
    // Configuración Supabase - Reemplazar con tus credenciales reales
    const supabaseUrl = 'https://qpccqoeronbcdyejfjod.supabase.co';
    const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFwY2Nxb2Vyb25iY2R5ZWpmam9kIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQyMzA5MzIsImV4cCI6MjA1OTgwNjkzMn0.v_KA6VdHl-F3sRiVaFMsfDQCS1qKERFBk5mTBcSiIDQ';
    const supabase = createClient(supabaseUrl, supabaseKey);

    // Variables globales
    let tipologiasData = [];
    let barriosData = [];
    let supervisoresData = [];
    let profesionalesData = [];
    let clientesData = [];
    let coordenadas = null;
    let map, marker;

    // Funciones auxiliares
    const escapeHtml = (unsafe) => {
      if (!unsafe) return '';
      return unsafe.toString()
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
    };

    const ordenarAlfabeticamente = (array, propiedad) => {
      return array?.sort((a, b) => {
        const textA = a[propiedad]?.toString().toUpperCase() || '';
        const textB = b[propiedad]?.toString().toUpperCase() || '';
        return textA.localeCompare(textB);
      }) || [];
    };

    function showNotification(message, type = "info") {
      const notification = document.createElement("div");
      notification.className = `toast align-items-center text-white bg-${type === 'error' ? 'danger' : type === 'success' ? 'success' : 'primary'} border-0`;
      notification.setAttribute('role', 'alert');
      notification.setAttribute('aria-live', 'assertive');
      notification.setAttribute('aria-atomic', 'true');
      notification.innerHTML = `
        <div class="d-flex">
          <div class="toast-body">
            <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle'} me-2"></i>
            ${message}
          </div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
      `;
      
      const toastContainer = document.getElementById('toastContainer');
      toastContainer.appendChild(notification);
      const toast = new bootstrap.Toast(notification);
      toast.show();
      
      notification.addEventListener('hidden.bs.toast', () => {
        notification.remove();
      });
    }

    // Inicializar mapa
    function initMap() {
      map = L.map('map').setView([9.9333, -84.077], 13);
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
      
      map.on('click', function(e) {
        coordenadas = e.latlng;
        if (marker) map.removeLayer(marker);
        marker = L.marker(coordenadas).addTo(map);
        
        const ubicacionMensaje = document.getElementById('ubicacion-mensaje');
        ubicacionMensaje.innerHTML = `
          <i class="fas fa-map-marker-alt text-success"></i> 
          Ubicación seleccionada: Lat ${coordenadas.lat.toFixed(5)}, Lng ${coordenadas.lng.toFixed(5)}
        `;
        ubicacionMensaje.classList.remove('text-muted');
        ubicacionMensaje.classList.add('text-success');
      });
    }

    // Cargar datos en los desplegables
    async function cargarDesplegables() {
      try {
        const [tipologias, barrios, supervisores, profesionales, clientes] = await Promise.all([
          supabase.from("tipologia_obra").select("id_tipologia_obra, descripcion_tipologia"),
          supabase.from("barrios_distritos").select("id_barrio, barrio"),
          supabase
            .from("colaboradores_06")
            .select("identificacion, alias")
            .eq("supervisor", true)
            .eq("condicion_laboral", false),
          supabase
            .from("colaboradores_06")
            .select("identificacion, alias")
            .eq("profesional_responsable", true)
            .eq("condicion_laboral", false),
          supabase.from("cliente_externo_24").select("id_cliente_externo, nombre_ce")
        ]);

        tipologiasData = ordenarAlfabeticamente(tipologias?.data, 'descripcion_tipologia') || [];
        barriosData = ordenarAlfabeticamente(barrios?.data, 'barrio') || [];
        supervisoresData = ordenarAlfabeticamente(supervisores?.data, 'alias') || [];
        profesionalesData = ordenarAlfabeticamente(profesionales?.data, 'alias') || [];
        clientesData = ordenarAlfabeticamente(clientes?.data, 'nombre_ce') || [];

        const buildOptions = (data, valueKey, textKey) => {
          let options = '<option value="" selected disabled>-- Seleccione una opción --</option>';
          options += data.map(opt => 
            `<option value="${escapeHtml(opt[valueKey])}">${escapeHtml(opt[textKey])}</option>`
          ).join('');
          return options;
        };

        document.getElementById("tipologia_trabajo").innerHTML = buildOptions(tipologiasData, 'id_tipologia_obra', 'descripcion_tipologia');
        document.getElementById("barrio_solicitud").innerHTML = buildOptions(barriosData, 'id_barrio', 'barrio');
        document.getElementById("supervisor_asignado").innerHTML = buildOptions(supervisoresData, 'identificacion', 'alias');
        document.getElementById("profesional_responsable").innerHTML = buildOptions(profesionalesData, 'identificacion', 'alias');
        document.getElementById("cliente_externo").innerHTML = buildOptions(clientesData, 'id_cliente_externo', 'nombre_ce');
      } catch (error) {
        console.error("Error cargando desplegables:", error);
        showNotification("Error al cargar los datos de los campos", "error");
      }
    }

    // Función para abrir el modal de búsqueda
    window.abrirModalBusqueda = function(tipo) {
      const modal = new bootstrap.Modal(document.getElementById('modalBusqueda'));
      const tituloModal = document.getElementById('tituloModal');
      const inputBusqueda = document.getElementById('inputBusqueda');
      
      let datos = [];
      let campoTexto = '';
      let campoValor = '';
      
      switch(tipo) {
        case 'tipologia':
          datos = tipologiasData;
          campoTexto = 'descripcion_tipologia';
          campoValor = 'id_tipologia_obra';
          tituloModal.textContent = 'Buscar Tipología de Trabajo';
          break;
        case 'barrio':
          datos = barriosData;
          campoTexto = 'barrio';
          campoValor = 'id_barrio';
          tituloModal.textContent = 'Buscar Barrio';
          break;
        case 'supervisor':
          datos = supervisoresData;
          campoTexto = 'alias';
          campoValor = 'identificacion';
          tituloModal.textContent = 'Buscar Supervisor';
          break;
        case 'profesional':
          datos = profesionalesData;
          campoTexto = 'alias';
          campoValor = 'identificacion';
          tituloModal.textContent = 'Buscar Profesional';
          break;
        case 'cliente':
          datos = clientesData;
          campoTexto = 'nombre_ce';
          campoValor = 'id_cliente_externo';
          tituloModal.textContent = 'Buscar Cliente Externo';
          break;
      }
      
      document.getElementById('modalBusqueda').dataset.tipo = tipo;
      document.getElementById('modalBusqueda').dataset.campoTexto = campoTexto;
      document.getElementById('modalBusqueda').dataset.campoValor = campoValor;
      
      mostrarResultados(datos, campoTexto);
      
      inputBusqueda.value = '';
      inputBusqueda.oninput = () => {
        const termino = inputBusqueda.value.toLowerCase();
        const resultados = datos.filter(item => 
          item[campoTexto].toLowerCase().includes(termino)
        );
        mostrarResultados(resultados, campoTexto);
      };
      
      modal.show();
    }

    // Mostrar resultados en el modal de búsqueda
    function mostrarResultados(resultados, campoTexto) {
      const listaResultados = document.getElementById('listaResultados');
      listaResultados.innerHTML = '';
      
      if (resultados.length === 0) {
        listaResultados.innerHTML = '<li class="list-group-item text-muted">No se encontraron resultados</li>';
        return;
      }
      
      resultados.forEach(item => {
        const li = document.createElement('li');
        li.className = 'list-group-item list-group-item-action';
        li.textContent = item[campoTexto];
        li.onclick = () => seleccionarItem(item);
        listaResultados.appendChild(li);
      });
    }

    // Seleccionar un ítem del modal de búsqueda
    function seleccionarItem(item) {
      const modal = document.getElementById('modalBusqueda');
      const tipo = modal.dataset.tipo;
      const campoValor = modal.dataset.campoValor;
      
      let selectId = '';
      switch(tipo) {
        case 'tipologia': selectId = 'tipologia_trabajo'; break;
        case 'barrio': selectId = 'barrio_solicitud'; break;
        case 'supervisor': selectId = 'supervisor_asignado'; break;
        case 'profesional': selectId = 'profesional_responsable'; break;
        case 'cliente': selectId = 'cliente_externo'; break;
      }
      
      const select = document.getElementById(selectId);
      if (select) {
        for (let i = 0; i < select.options.length; i++) {
          if (select.options[i].value === item[campoValor].toString()) {
            select.selectedIndex = i;
            break;
          }
        }
      }
      
      bootstrap.Modal.getInstance(modal).hide();
    }

    // Guardar solicitud
    async function guardarSolicitud(e) {
      e.preventDefault();
      
      try {
        // Validar campos obligatorios
        const descripcion = document.getElementById("descripcion_solicitud").value.trim();
        const tipologia_trabajo = document.getElementById("tipologia_trabajo").value;
        const barrio_solicitud = document.getElementById("barrio_solicitud").value;
        const direccion_exacta = document.getElementById("direccion_exacta").value.trim();
        const supervisor_asignado = document.getElementById("supervisor_asignado").value;
        const profesional_responsable = document.getElementById("profesional_responsable").value;
        const cliente_externo = document.getElementById("cliente_externo").value;

        if (!descripcion) {
          showNotification("La descripción es requerida", "error");
          document.getElementById("descripcion_solicitud").focus();
          return;
        }

        if (!tipologia_trabajo) {
          showNotification("Debe seleccionar una tipología de trabajo", "error");
          document.getElementById("tipologia_trabajo").focus();
          return;
        }

        if (!barrio_solicitud) {
          showNotification("Debe seleccionar un barrio", "error");
          document.getElementById("barrio_solicitud").focus();
          return;
        }

        if (!direccion_exacta) {
          showNotification("La dirección exacta es requerida", "error");
          document.getElementById("direccion_exacta").focus();
          return;
        }

        if (!supervisor_asignado) {
          showNotification("Debe seleccionar un supervisor", "error");
          document.getElementById("supervisor_asignado").focus();
          return;
        }

        if (!profesional_responsable) {
          showNotification("Debe seleccionar un profesional responsable", "error");
          document.getElementById("profesional_responsable").focus();
          return;
        }

        if (!cliente_externo) {
          showNotification("Debe seleccionar un cliente externo", "error");
          document.getElementById("cliente_externo").focus();
          return;
        }

        if (!coordenadas) {
          showNotification("Debe seleccionar una ubicación en el mapa", "error");
          document.getElementById("map").scrollIntoView({ behavior: 'smooth' });
          return;
        }

        // Mostrar estado de carga
        const submitBtn = document.querySelector("#btn-guardar");
        submitBtn.innerHTML = `
          <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
          Guardando...
        `;
        submitBtn.disabled = true;

        // Preparar datos para insertar
        const datos = {
          id_solicitud_sa: null,
          tipo_solicitud: 'STE',
          fecha_solicitud: new Date().toISOString(),
          area_mantenimiento: null,
          tipologia_trabajo,
          descripcion_solicitud: escapeHtml(descripcion),
          barrio_solicitud,
          direccion_exacta: escapeHtml(direccion_exacta),
          latitud: coordenadas.lat,
          longitud: coordenadas.lng,
          link_ubicacion: `https://www.google.com/maps?q=${coordenadas.lat},${coordenadas.lng}`,
          imagen_ubicacion: null,
          instalacion_municipal: null,
          supervisor_asignado,
          profesional_responsable,
          cliente_externo,
          cliente_interno: null,
          coordenadas: `SRID=4326;POINT(${coordenadas.lng} ${coordenadas.lat})`
        };

        // Insertar en la base de datos
        const { data: insertedRows, error } = await supabase
          .from('solicitud_17')
          .insert([datos])
          .select('numero_solicitud');

        if (error) throw error;
        
        const numeroGenerado = insertedRows[0].numero_solicitud;
        showNotification(`Solicitud #${numeroGenerado} guardada exitosamente`, 'success');
        
        // Resetear formulario
        document.getElementById('form-solicitud').reset();
        if (marker) map.removeLayer(marker);
        coordenadas = null;
        document.getElementById('ubicacion-mensaje').innerHTML = '<i class="fas fa-info-circle"></i> Ninguna ubicación seleccionada';
        document.getElementById('ubicacion-mensaje').classList.remove('text-success');
        document.getElementById('ubicacion-mensaje').classList.add('text-muted');
        document.getElementById("descripcion_solicitud").focus();
        
      } catch (error) {
        console.error("Error guardando solicitud:", error);
        showNotification("Error al guardar la solicitud: " + error.message, "error");
      } finally {
        // Restaurar estado del botón
        const submitBtn = document.querySelector("#btn-guardar");
        submitBtn.innerHTML = '<i class="fas fa-save me-2"></i> Guardar Solicitud';
        submitBtn.disabled = false;
      }
    }

    // Función para navegar a la página de visualización de solicitudes
    window.verSolicitudes = function() {
      window.location.href = 'tabla_ste.html';
    }

    // Inicializar aplicación
    window.addEventListener("DOMContentLoaded", () => {
      initMap();
      cargarDesplegables();
      document.getElementById('form-solicitud').addEventListener('submit', guardarSolicitud);
    });
  </script>
</body>
</html>
